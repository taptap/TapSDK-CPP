cmake_minimum_required(VERSION 3.21)
enable_language(ASM)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_EXTENSIONS ON)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if (CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
    set(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
endif ()

message("CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE}")
if (CMAKE_BUILD_TYPE STREQUAL "Release")
    set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)
    add_definitions(-DOPENSSL_NO_ERR=1)
    add_definitions(-DOPENSSL_NO_FILENAMES=1)
    add_definitions(-DNDEBUG=1)
    if (APPLE OR ANDROID)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -fdiscard-value-names -fno-show-source-location -fno-caret-diagnostics")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O3 -fdiscard-value-names -fno-show-source-location -fno-caret-diagnostics")
    endif()
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fvisibility=hidden")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -s")
endif ()

add_definitions(-DTDS_VERSION="1.0.0")

# Enable modules to include each other's files
include_directories(.)

add_subdirectory(base)
add_subdirectory(externals)
add_subdirectory(core)
add_subdirectory(net)
add_subdirectory(sdk)
add_subdirectory(duration)
add_subdirectory(login)
add_subdirectory(tracker)
if (DEFINED BUILD_FOR_TESTING)
    add_subdirectory(tests)
endif ()
add_subdirectory(bindings)