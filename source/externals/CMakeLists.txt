include(import_remote.cmake)
add_subdirectory(fmt)
add_subdirectory(filesystem)
add_subdirectory(nlohmann_json)
add_subdirectory(catch)
add_compile_definitions(CINATRA_ENABLE_SSL)
add_subdirectory(cinatra)
add_subdirectory(sqlite3)
add_subdirectory(sqlite_orm)
add_subdirectory(event_bus)
add_subdirectory(protobuf)
# lz4
set(LZ4_BUNDLED_MODE ON)
add_subdirectory(lz4/contrib/cmake_unofficial)
add_library(lz4::lz4 ALIAS lz4_static)
if (DEFINED BUILD_FOR_TESTING)
    add_subdirectory(libqrencode)
endif()
#add_subdirectory(marl)

# openssl
find_package(OpenSSL 1.1)
if (NOT OPENSSL_FOUND OR APPLE)
    add_subdirectory(openssl)
else()
    set(OPENSSL_LIBRARIES OpenSSL::SSL OpenSSL::Crypto)
endif()

# ranges
if (ANDROID)
    add_library(compat INTERFACE)
    target_include_directories(compat INTERFACE compat/ranges)
    target_include_directories(compat INTERFACE compat)
endif ()