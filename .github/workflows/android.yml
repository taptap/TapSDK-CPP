name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: install swig
      run: sudo apt-get install swig
      
    - name: Build
      run: |
        cd scripts
        chmod +x build-android.sh
        ./build-android.sh
        cd ../android/sdk
        zip -r csharp-binding.zip swig/csharp
        
    - name: Upload sdk
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: android-sdk.aar
        # A file, directory or wildcard pattern that describes what to upload
        path: android/sdk/build/outputs/aar/sdk-release.aar
        
    - name: Upload demo
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: android-demo.apk
        # A file, directory or wildcard pattern that describes what to upload
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk
        
    - name: Upload csharp-binding
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: csharp-binding.zip
        # A file, directory or wildcard pattern that describes what to upload
        path: android/sdk/csharp-binding.zip

    - name: Upload C# Bindings to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: android/sdk/csharp-binding.zip
        asset_name: csharp-binding.zip
        asset_content_type: application/octet-stream

    - name: Upload AAR to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: android/sdk/build/outputs/aar/sdk-release.aar
        asset_name: android-sdk.aar
        asset_content_type: application/octet-stream
