name: Windows CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [created]

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:
  build:

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies
        shell: powershell
        run: |
          nuget install swigwintools -Version 4.0.0 -OutputDirectory C:\Tools\swig

      - name: Build
        shell: powershell
        run: |
          $env:PATH="C:\Tools\swig;" + $env:PATH
          $WORKING_DIR=(Get-Location).ToString() -replace "\\","/"
          mkdir build
          cd .\build\
          cmake ../ -G "Visual Studio 17 2022" -A "x64" -DCMAKE_BUILD_TYPE=Release -DCSHARP_BINDING="$WORKING_DIR/swig"
          cmake --build ./ --config Release -j 8

      - name: pack sdks
        run: |
          mkdir windows_sdks
          cp .\build\source\sdk\Release\tds_core_combined.lib .\windows_sdks\tds_core.lib
          cp .\build\source\bindings\csharp\Release\bindings-csharp.dll .\windows_sdks\tds_core.dll
          cp .\build\source\bindings\csharp\Release\bindings-csharp.lib .\windows_sdks\tds_core.dll.lib
          Compress-Archive -Path .\windows_sdks -DestinationPath .\windows_sdks.zip

      - name: Upload sdks
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: windows_sdks.zip
          # A file, directory or wildcard pattern that describes what to upload
          path: windows_sdks.zip

      - name: Upload SDKS to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: windows_sdks.zip
          asset_name: windows_sdks.zip
          asset_content_type: application/octet-stream